namespace BGE

  class Collider

    collider_type as string = invalid
    name = ""
    enabled = true
    offset_x = 0
    offset_y = 0

    member_flags = 1
    collidable_flags = 1
    compositor_object = invalid


    function new (collider_name as string, args = {} as object)
      m.name = collider_name
      m.append(args)
    end function


    function setupCompositor(game as object, entityName as string, entityId as string, entityX as float, entityY as float) as void
      'bs:disable-next-line
      region = CreateObject("roRegion", game.empty_bitmap, 0, 0, 1, 1)
      m.compositor_object = game.compositor.NewSprite(entityX, entityY, region)
      m.compositor_object.SetDrawableFlag(false)
      m.compositor_object.SetData({collider_name: m.name, object_name: entityName, entity_id: entityId})
      m.refreshColliderRegion()
    end function

    function refreshColliderRegion() as void
      region = m.compositor_object.GetRegion()
      region.SetCollisionType(0)
    end function

    function adjustCompositorObject(x as float, y as float)
      if m.enabled then
        m.compositor_object.SetMemberFlags(m.member_flags)
        m.compositor_object.SetCollidableFlags(m.collidable_flags)
        m.refreshColliderRegion()
        m.compositor_object.MoveTo(x, y)
      else
        m.compositor_object.SetMemberFlags(0)
        m.compositor_object.SetCollidableFlags(0)
      end if
    end function

    function debugDraw(draw2d as object, entityX as float, entityY as float, color = &hFF0000FF as integer) as void
    end function
  end class
end namespace
